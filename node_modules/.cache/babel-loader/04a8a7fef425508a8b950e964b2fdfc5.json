{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lloydrhodes/Desktop/reactography/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lloydrhodes/Desktop/reactography/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/reactography/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/reactography/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/reactography/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/reactography/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/reactography/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/reactography/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Search from \"./Components/Search\";\nimport Current from './Components/Current';\nimport Home from './Components/Home';\nimport Forecast from './Components/Forecast';\nimport { Router, Link } from '@reach/router';\nimport Error from './Components/Error';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      location: 'location',\n      weatherData: [],\n      lat: 51.5,\n      lon: -0.05,\n      main: '',\n      temp: '',\n      tempUnit: true,\n      filteredList: [],\n      forecastDataObject: [],\n      currTempMin: '',\n      currTempMax: '',\n      currMain: '',\n      currDesc: ''\n    };\n\n    _this.changeTempUnit = function () {\n      _this.setState(function (state) {\n        return {\n          tempUnit: !state.tempUnit\n        };\n      });\n    };\n\n    _this.formatTemp = function (temp) {\n      var newTemp;\n\n      if (!_this.state.tempUnit) {\n        newTemp = (temp - 273.15) * 1.8 + 32;\n        return \"\".concat(Math.floor(newTemp), \"\\xB0F\");\n      } else {\n        newTemp = temp;\n      }\n\n      return \"\".concat(Math.floor(newTemp - 273.15), \"\\xB0C\");\n    };\n\n    _this.fetchWeatherData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var location, _ref2, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              location = _this.state.location;\n              _context.next = 4;\n              return axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(location, \"&APPID=8dfe209e2c6bf6698c6df408d5d0c51c\"));\n\n            case 4:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              return _context.abrupt(\"return\", data);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", React.createElement(Error, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 120\n                },\n                __self: this\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 9]]);\n    }));\n    _this.fetchForecastData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var location, _ref4, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              location = _this.state.location;\n              _context2.next = 4;\n              return axios.get(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(location, \"&APPID=8dfe209e2c6bf6698c6df408d5d0c51c\"));\n\n            case 4:\n              _ref4 = _context2.sent;\n              data = _ref4.data;\n              return _context2.abrupt(\"return\", data);\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", React.createElement(Error, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 131\n                },\n                __self: this\n              }));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[0, 9]]);\n    }));\n\n    _this.updateSearch = function (item) {\n      _this.setState(function () {\n        return {\n          location: item\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Global Weather\"), React.createElement(\"div\", {\n        className: \"navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"nav\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Home\"), React.createElement(Link, {\n        className: \"nav\",\n        to: \"/current\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Current Weather\"), React.createElement(Link, {\n        className: \"nav\",\n        to: \"/forecast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"5 Day Forecast\")), React.createElement(Search, {\n        updateSearch: this.updateSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Home, {\n        path: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Current, {\n        path: \"/current\",\n        state: this.state,\n        changeTempUnit: this.changeTempUnit,\n        formatTemp: this.formatTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Forecast, {\n        path: \"/forecast\",\n        forecastDataObject: this.state.forecastDataObject,\n        changeTempUnit: this.changeTempUnit,\n        formatTemp: this.formatTemp,\n        tempUnit: this.state.tempUnit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      this.fetchWeatherData().then(function (dataWeather) {\n        _this2.fetchForecastData().then(function (forecastData) {\n          var _dataWeather$coord = dataWeather.coord,\n              lat = _dataWeather$coord.lat,\n              lon = _dataWeather$coord.lon;\n          var _dataWeather$main = dataWeather.main,\n              temp = _dataWeather$main.temp,\n              temp_min = _dataWeather$main.temp_min,\n              temp_max = _dataWeather$main.temp_max;\n          var _dataWeather$weather$ = dataWeather.weather[0],\n              description = _dataWeather$weather$.description,\n              main = _dataWeather$weather$.main;\n          var list = forecastData.list;\n          console.log(dataWeather);\n          var filteredList = list.filter(function (element) {\n            return element.dt_txt.includes('12:00:00');\n          });\n          var forecastDataObject = filteredList.reduce(function (arr, curr) {\n            arr.push({\n              Day: new Date(curr['dt_txt'].replace(/ 12:00:00/, '')).toString().slice(0, 3),\n              Outlook: curr.weather[0].main,\n              Description: curr.weather[0].description,\n              Temperature: curr.main.temp,\n              Max: curr.main.temp_max,\n              Min: curr.main.temp_min\n            });\n            return arr;\n          }, []);\n\n          if (_this2.state.location !== prevState.location) {\n            _this2.setState({\n              lat: lat,\n              lon: lon,\n              temp: temp,\n              filteredList: filteredList,\n              forecastDataObject: forecastDataObject,\n              currTempMin: temp_min,\n              currTempMax: temp_max,\n              currMain: main,\n              currDesc: description\n            });\n          }\n        });\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/reactography/src/App.js"],"names":["React","Component","axios","Search","Current","Home","Forecast","Router","Link","Error","App","state","location","weatherData","lat","lon","main","temp","tempUnit","filteredList","forecastDataObject","currTempMin","currTempMax","currMain","currDesc","changeTempUnit","setState","formatTemp","newTemp","Math","floor","fetchWeatherData","get","data","fetchForecastData","updateSearch","item","prevProps","prevState","then","dataWeather","forecastData","coord","temp_min","temp_max","weather","description","list","console","log","filter","element","dt_txt","includes","reduce","arr","curr","push","Day","Date","replace","toString","slice","Outlook","Description","Temperature","Max","Min"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Search from \"./Components/Search\";\nimport Current from './Components/Current';\nimport Home from './Components/Home';\nimport Forecast from './Components/Forecast';\nimport { Router, Link } from '@reach/router';\nimport Error from './Components/Error';\n\n\nclass App extends Component {\n  state = {\n    location: 'location',\n    weatherData: [],\n    lat: 51.5,\n    lon: -0.05,\n    main: '',\n    temp: '',\n    tempUnit: true,\n    filteredList: [],\n    forecastDataObject: [],\n    currTempMin: '',\n    currTempMax: '',\n    currMain: '',\n    currDesc: ''\n  \n  };\n  render() {\n    return <div className=\"App\">\n        <h1 className=\"header\">Global Weather</h1>\n      <div className=\"navbar\">\n        <Link className=\"nav\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\"nav\" to=\"/current\">\n          Current Weather\n        </Link>\n        <Link className=\"nav\" to=\"/forecast\">\n          5 Day Forecast\n        </Link>    \n    </div>\n      <Search updateSearch={this.updateSearch} />\n        \n        <Router>\n          <Home path=\"/\" />\n          <Current path=\"/current\" state={this.state} changeTempUnit={this.changeTempUnit} formatTemp={this.formatTemp} />\n          <Forecast path=\"/forecast\" forecastDataObject={this.state.forecastDataObject} changeTempUnit={this.changeTempUnit} formatTemp={this.formatTemp} tempUnit={this.state.tempUnit} />\n        </Router>\n      </div>;\n  }\n\n  changeTempUnit = () => {\n    this.setState(state => ({\n      tempUnit: !state.tempUnit\n    }));\n  };\n  formatTemp = temp => {\n    let newTemp;\n    if (!this.state.tempUnit) {\n      newTemp = (temp - 273.15) * 1.8 + 32;\n      return `${Math.floor(newTemp)}°F`;\n    } else {\n      newTemp = temp;\n    }\n    return `${Math.floor(newTemp - 273.15)}°C`;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.fetchWeatherData().then(dataWeather => {\n      this.fetchForecastData().then(forecastData => {\n        const { lat, lon } = dataWeather.coord;\n        const { temp, temp_min, temp_max } = dataWeather.main;\n  \n        const { description, main } = dataWeather.weather[0];\n        const { list } = forecastData;\n        console.log(dataWeather);\n        const filteredList = list.filter(element => element.dt_txt.includes('12:00:00'));\n        const forecastDataObject = filteredList.reduce((arr, curr) => {          \n          arr.push(\n            {\n              Day: new Date(curr['dt_txt'].replace(/ 12:00:00/, '')).toString().slice(0,3),\n              Outlook: curr.weather[0].main,\n              Description: curr.weather[0].description,\n              Temperature: curr.main.temp,\n              Max: curr.main.temp_max,\n              Min: curr.main.temp_min\n\n          }\n            );\n          return arr;\n        }, [])\n               \n\n        if (this.state.location !== prevState.location) {\n          this.setState({\n            lat,\n            lon,\n            temp,\n            filteredList,\n            forecastDataObject,\n            currTempMin: temp_min,\n            currTempMax: temp_max,\n            currMain: main,\n            currDesc: description             \n          })\n        } \n      })\n    })\n  }\n\n\n\n  fetchWeatherData = async () => {\n    try {\n      const { location } = this.state;\n      const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=8dfe209e2c6bf6698c6df408d5d0c51c`);\n      return data;\n    } catch (error) {\n      return <Error />\n    }\n  };\n\n  fetchForecastData = async () => {\n    try {\n      const { location } = this.state;\n      const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${location}&APPID=8dfe209e2c6bf6698c6df408d5d0c51c`);\n\n      return data;\n    } catch (error) {\n      return < Error />\n    }\n  };\n\n  updateSearch = item => {\n    this.setState(() => ({\n      location: item\n    }));\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}